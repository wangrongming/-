docker配置

    1 docker中文说明文档  https://yeasy.gitbooks.io/docker_practice/

    2 脚本安装docker
        curl -fsSL get.docker.com -o get-docker.sh
        sudo sh get-docker.sh --mirror Aliyun

    3 启动docker ce
        sudo systemctl enable docker
        sudo systemctl start docker

    4 建立 docker 用户组（未设置）
        sudo groupadd docker
        sudo usermod -aG docker $USER

    5 测试 Docker 是否安装正确
        docker run hello-world

    6 镜像加速
        1> 腾讯云 快速拉取 DockerHub 平台上的容器镜像：https://cloud.tencent.com/document/product/457/9113
            创建或修改 /etc/docker/daemon.json
            {
               "registry-mirrors": [
                   "https://mirror.ccs.tencentyun.com"
              ]
            }
            docker info 查看配置是否成功

        2> 容器下载加速其他：
            RUN mv -f sources.list /etc/apt/ && apt-get update
            sources.list:
                deb http://mirrors.aliyun.com/debian buster main contrib non-free
                deb http://mirrors.aliyun.com/debian buster-updates main contrib non-free
                deb http://mirrors.aliyun.com/debian buster-backports main contrib non-free
                deb http://mirrors.aliyun.com/debian-security buster/updates main contrib non-free

docker 命令

    1 docker 打包
        docker build . -t kf_data:20041301
        docker build . -t data_crawler:base

    2 docker 运行
        docker run -d kf_data:20041301

    3 docker 查看运行日志
        docker logs -f -t --tail 1000 b182c57fe5d72f420961268dc9c45a45ee135399a684f7276397cca89fbc862e
        docker logs 8e2168c0e99e 查看某容器日志信息

    4 进入正在运行的容器
        docker exec -it b182c57fe5d7 /bin/bash

    5 根据容器生成镜像
        docker commit -m "下载了chromnium浏览器" -a "kf_data" 8e2168c0e99e kf_data:20042101

    6 容器启停
        docker start bdfa01c255c5
        docker stop bdfa01c255c5

    7 镜像传递：
        docker push kf_data:20040202

        docker tag kf_data:20040202 ccr.ccs.tencentyun.com/yunting-spider/kf_data:20040202
	    docker push ccr.ccs.tencentyun.com/yunting-spider/kf_data:20040202

        docker tag cookie_factory:20040704 ccr.ccs.tencentyun.com/eqs-data/cookie_factory:20040704
	    docker push ccr.ccs.tencentyun.com/eqs-data/cookie_factory:20042101

    8 docker拷贝镜像
        docker save -o 要保存的文件名  要保存的镜像
        docker load --input 文件  /  docker load < 文件名
        eg:
            docker save -o eqs_data_latest.tar eqs_data:latest
            scp eqs_data_latest.tar root@10.1.4.45:/root/
            docker load --input eqs_data_latest.tar
Dockerfile
    注意：apt-get install 安装顺序错误会导致 => 程序安装失败
    eg1:
        FROM python:3.6.9-slim
        ADD . .
        RUN mv -f sources.list /etc/apt/ \
          && apt-get update && apt-get install -y gcc libxcomposite-dev libxcursor-dev libxi-dev libxtst-dev libglib2.0-dev libnss3-dev \
          libasound-dev libpangocairo-1.0-0 libatk1.0-0 libatk-bridge2.0-0 libcups2-dev libxss-dev libxrandr-dev libgtk-3-0 xvfb nodejs \
          && pip install -r requirements.txt \
          && sed -i 's/self._url, max_size=None, loop=self._loop)/self._url, max_size=None, loop=self._loop, ping_interval=None, ping_timeout=None)/g' /usr/local/lib/python3.6/site-packages/pyppeteer/connection.py \
          && chmod +x startup.sh \
          && sed -i "s/\r//g" startup.sh
        ENTRYPOINT ["./startup.sh"]

    eg2:
        FROM python:3.6.9-slim
        RUN mkdir /root/kf
        ADD . /root/kf
        WORKDIR /root/kf
        RUN mv -f sources.list /etc/apt/ \
          && apt-get update && apt-get install -y gcc libxcomposite-dev libxcursor-dev libxi-dev libxtst-dev libglib2.0-dev libnss3-dev \
          libasound-dev libpangocairo-1.0-0 libatk1.0-0 libatk-bridge2.0-0 libcups2-dev libxss-dev libxrandr-dev libgtk-3-0 xvfb nodejs \
          procps ack-grep \
          && pip install -r requirements.txt \
          && sed -i 's/self._url, max_size=None, loop=self._loop)/self._url, max_size=None, loop=self._loop, ping_interval=None, ping_timeout=None)/g' /usr/local/lib/python3.6/site-packages/pyppeteer/connection.py \
          && chmod +x startup.sh \
          && sed -i "s/\r//g" startup.sh \
          && chmod 755 /root
        ENTRYPOINT ["./startup.sh"]

